name: CI

on:
  push:
    branches: [develop, main]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Go tests (core-go)
        run: |
          cd core-go/mobile
          go vet ./...
          go test -tags=mobile_skel -v ./... -timeout=5m -mod=readonly

      # ↓↓↓ Эти шаги выполняются ТОЛЬКО на тегах (для релиза)
      - name: Setup JDK 17
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Android SDK
        if: startsWith(github.ref, 'refs/tags/v')
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Install gomobile toolchain
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          if [ ! -e "$HOME/.gomobile" ]; then
            gomobile init
          else
            echo "gomobile already initialized"
          fi
        env:
          PATH: ${{ env.PATH }}:$HOME/go/bin

      - name: Build Android AAR (placeholder)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # пример: если у тебя есть модуль sdk-kotlin с gradlew
          if [ -f "sdk-kotlin/gradlew" ]; then
            cd sdk-kotlin
            chmod +x ./gradlew
            ./gradlew assembleRelease --no-daemon
          else
            echo "No Gradle project (skipping AAR build)"
          fi

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            sdk-kotlin/**/build/outputs/**/*.aar
            sdk-kotlin/**/build/outputs/**/*.pom
          if-no-files-found: warn