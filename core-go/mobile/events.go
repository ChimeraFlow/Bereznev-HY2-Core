//go:build android || ios || mobile_skel

// Package mobile ‚Äî –º–æ–±–∏–ª—å–Ω—ã–π —Å–ª–æ–π SDK (gomobile bind).
// –≠—Ç–æ—Ç —Ñ–∞–π–ª —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Å–æ–±—ã—Ç–∏–π SDK ‚Äî EventSink –∏ emit(),
// –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–≤—è–∑–∏ –º–µ–∂–¥—É Go-—è–¥—Ä–æ–º –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º (Kotlin/Swift).
//
// EventSink ‚Äî —ç—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏–∑ Go –≤ —Å—Ç–æ—Ä–æ–Ω—É UI/SDK.
// –ß–µ—Ä–µ–∑ –Ω–µ–≥–æ SDK —Å–æ–æ–±—â–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –æ –∫–ª—é—á–µ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –∏ –æ—à–∏–±–∫–∞—Ö:
// –∑–∞–ø—É—Å–∫, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞, –ø–∞–Ω–∏–∫–∞, reconnect –∏ —Ç.–¥.
//
// –°–æ–±—ã—Ç–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ api.go, lifecycle.go –∏ –±—É–¥—É—â–∏—Ö –º–æ–¥—É–ª–µ–π (HY2 runtime).
package mobile

import "fmt"

// EventSink ‚Äî –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Å–æ–±—ã—Ç–∏–π –∏–∑ Go –≤ Kotlin/Swift.
// –†–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ Kotlin SDK).
//
// –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ OnEvent(name, data) –ø–æ–ª—É—á–∞–µ—Ç:
//   - name ‚Äî —Å—Ç—Ä–æ–∫—É —Å —Ç–∏–ø–æ–º —Å–æ–±—ã—Ç–∏—è ("started", "stopped", "error", ...)
//   - data ‚Äî JSON-–ø–æ–ª–µ–∑–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É, –æ–ø–∏—Å—ã–≤–∞—é—â—É—é –¥–µ—Ç–∞–ª–∏.
//
// –ü—Ä–∏–º–µ—Ä (Kotlin):
// ```kotlin
//
//	class MyEventHandler : EventSink {
//	    override fun OnEvent(name: String, data: String) {
//	        println("Event: $name, Data: $data")
//	    }
//	}
//
// hy2core.SetEventSink(MyEventHandler())
// ```
type EventSink interface{ OnEvent(name, data string) }

func (f EventSinkFunc) OnEvent(name, payload string) { f(name, payload) }

var (
	// evt ‚Äî —Ç–µ–∫—É—â–∏–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π EventSink.
	// –ï—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ–±—ã—Ç–∏—è –±—É–¥—É—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã.
	evt EventSink
)

// SetEventSink —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–Ω–µ—à–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π SDK.
// –û–±—ã—á–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ Kotlin/Swift –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è–¥—Ä–∞.
//
// –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
//   - s ‚Äî –æ–±—ä–µ–∫—Ç, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å EventSink.
//
// –ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:
//   - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫—É –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é evt.
func SetEventSink(s EventSink) { evt = s }

// emit ‚Äî –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è (–µ—Å–ª–∏ EventSink —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω).
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ –º–æ–¥—É–ª—è–º–∏ SDK (api.go, lifecycle.go, logging.go).
//
// –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
//   - name ‚Äî –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–±—ã—Ç–∏—è (—Å—Ç—Ä–æ–∫–∞);
//   - data ‚Äî JSON-–ø–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å "{}").
//
// –ë–µ–∑–æ–ø–∞—Å–Ω–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ –ª—é–±—ã—Ö –≥–æ—Ä—É—Ç–∏–Ω.
func emit(name, data string) {
	if evt != nil {
		evt.OnEvent(name, data)
	}
}

// ===============================
// üß≠ –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
// ===============================

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–º—ë–Ω —Å–æ–±—ã—Ç–∏–π.
// –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π –º–µ–∂–¥—É —Å–ª–æ—è–º–∏.
const (
	EvtStarted      = "started"   // —è–¥—Ä–æ –∑–∞–ø—É—â–µ–Ω–æ
	EvtStopped      = "stopped"   // —è–¥—Ä–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
	EvtReloaded     = "reloaded"  // –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞
	EvtPanic        = "panic"     // panic() –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞
	EvtError        = "error"     // –æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
	EvtReconnect    = "reconnect" // –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ / –ø–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
	EvtReconnecting = "reconnecting"
	EvtReconnected  = "reconnected"
)

type evtReconnecting struct {
	Reason  string `json:"reason"`
	Attempt int    `json:"attempt"`
	NextMs  int    `json:"next_ms"`
}

type evtReconnected struct {
	RttMs int64 `json:"rtt_ms"`
}

type EventSinkFunc func(name, payload string)

// emitError ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –æ–± –æ—à–∏–±–∫–µ.
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, —Å–µ—Ç–µ–≤—ã—Ö —Å–±–æ—è—Ö –∏ —Ç.–ø.
//
// –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
//   - code ‚Äî —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ –æ—à–∏–±–∫–∏;
//   - msg ‚Äî —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (–∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ).
//
// –ü—Ä–∏–º–µ—Ä:
//
//	emitError(1001, "connection timeout")
func emitError(code int, msg string) {
	emit(EvtError, fmt.Sprintf(`{"code":%d,"msg":%q}`, code, msg))
}

// emitState ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
// (–Ω–∞–ø—Ä–∏–º–µ—Ä, started, stopped, reloaded).
//
// –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
//   - event ‚Äî –æ–¥–Ω–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π EvtStarted, EvtStopped, EvtReloaded.
//
// –ü—Ä–∏–º–µ—Ä:
//
//	emitState(EvtStarted)
func emitState(event string) {
	emit(event, "{}")
}
